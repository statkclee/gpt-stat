[
  {
    "objectID": "case_study.html#교통사고",
    "href": "case_study.html#교통사고",
    "title": "\n1  사례 연구\n",
    "section": "\n1.1 교통사고",
    "text": "1.1 교통사고\n포아송은 미래에 발생할 경우의 수를 예측하기 위해서 포아송 분포를 창안했다. 좀더 구체적으로 고정된 시간 범위에 발생할 사건을 예측하기 위해서다.\n한가지 사례로 한국 R 사용자회 페이스북 그룹에 매주 페이스북 게시글을 올리는데 좋아요를 누르는 평균 회원수가 10명이다. 새로운 페이스북 게시글을 올렸는데 좋아요를 누른 회원이 15명이 될 확률은 얼마나 될까?\n이와 같이 다음주(미래) 좋아요를 누른(사건) 회원수가 15명(5, 10, 20, …)이 될 확률을 알고 싶은 것이다.\n\n1.1.1 포아송 분포 수렴\n다음 조건을 만족할 때 이항분포가 포아송 분포로 수렴되어 근사할 수 있다.\n\n시행 횟수 \\(n\\) 이 매우 크다.\n성공 확률 \\(p\\) 가 매우 작다.\n따라서, \\(\\lambda = n \\times p\\) 가 일정하다.\n\n이항분포 \\(Bin(n, p)\\)는 포아송 분포 \\(Poi(\\lambda)\\)에 근사한다.\n전체 제품 중에서 고장확률이 매우 작은 전자제품을 사례로 들어보자. 예를 들어, 어떤 공장에서 10,000개의 제품을 제조했을 때, 각 제품이 고장날 확률이 0.0001이라고 가정하면 이항분포로 전체 제품 중 1개 고장확률을 계산할 수 있지만, 제품 수가 매우 크고 고장 확률이 매우 작기 때문에 \\(\\lambda = np = 10,000 \\times 0.0001 = 1\\)를 갖는 포아송 분포를 사용하여 근사할 수 있다.\n\n1.1.2 월간 교통사고\n한 도시의 주요 교차로에서, 지난 1년 동안의 데이터를 기반으로 하루 평균 3건의 교통 사고가 발생했다고 가정하자. 이 정보를 바탕으로 특정 날에 교통 사고가 발생할 횟수의 확률 분포를 예측해보자.\n포아송 분포의 평균은 \\(\\lambda\\)이며, 이 경우에는 하루 평균 교통 사고 횟수인 3으로 설정할 수 있다.\n이제 포아송 분포의 확률 질량 함수를 사용하여, 특정 날에 교통 사고가 k번 발생할 확률을 계산할 수 있다.\n\\[\nP(X=k) = \\frac{\\lambda^k e^{-\\lambda}}{k!}\n\\]\n여기서, \\(e\\)는 자연상수입니다.\n예를 들어, 특정 날에 교통 사고가 정확히 2번 발생할 확률을 계산하려면:\n\\[P(X=2) = \\frac{3^2 e^{-3}}{2!} = 0.224\\]\n한걸음 더 들어가 실세 교통사고분석시스템(TAAS) 웹사이트에서 2022년 월별 교통사고 데이터를 얻을 수 있다.\n\nlibrary(tidyverse)\nlibrary(readxl)\n\naccident_raw &lt;- read_excel(\"data/2022년_월별_교통사고.xlsx\", sheet = \"2022년도 월별 교통사고\", skip = 2)\n\naccident_tbl &lt;- accident_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(월, 사고건수 = 사고건수_건) \n\naccident_tbl\n\n# A tibble: 12 × 2\n   월    사고건수\n   &lt;chr&gt;    &lt;dbl&gt;\n 1 01월     15894\n 2 02월     12362\n 3 03월     13620\n 4 04월     16472\n 5 05월     18065\n 6 06월     16481\n 7 07월     17115\n 8 08월     16496\n 9 09월     17216\n10 10월     18508\n11 11월     17578\n12 12월     17029\n\n\n월별 평균 사고건수를 mean() 함수를 사용해서 계산할 수 있다. 교통량은 상당히 크고, 교통사고 확률은 매우 낮기 때문에 포아송 분포로 근사를 하는 것이 가능하다. 교통사고 건수가 많기 때문에 단위를 천대 기준으로 조정하여 포아송 분포 모수 \\(\\lambda\\)를 계산한다.\n\naccident_mean &lt;- mean(accident_tbl$사고건수) / 1000\n\naccident_mean\n\n[1] 16.403\n\n\n월별로 2만대 이상 교통사고가 발생될 경우 교통사고 환자수가 급증하여 병원에 큰 부하가 걸려 사회적 문제가 된다는 가정하에 월별로 2만대 이상 교통사고가 발생할 확률을 계산해보자.\n\\(P(X \\geq 20)\\) 확률값은 전체 경우의 수에서 0 ~ 1.9 만대 사고건수가 발생할 확률을 빼주면 계산이 가능하고 다음과 같이 수식으로 표현할 수 있다.\n\\[\nP(X \\geq 20) = 1 - (P(X=0) + P(X=1) + \\ldots + P(X=19))\n\\]\n이를 R 코드로 작성하면 다음과 같이 함수형 프로그래밍 purrr 패키지 map_dbl() 함수와 포아송 함수에 \\(\\lambda = 16.403\\)를 넣어 계산이 가능하거나 내장 함수 ppois()로 직접 동일한 계산작업을 수행할 수 있다.\n\nlibrary(tidyverse)\n\naccident_prob &lt;- 1 - sum(map_dbl(0:19, ~ (accident_mean^.x * exp(-accident_mean)) / factorial(.x)))\n# 1 - ppois(19, lambda = 16.403)\n\naccident_prob\n\n[1] 0.2169535"
  },
  {
    "objectID": "case_study.html#프로이센-기병-사망자",
    "href": "case_study.html#프로이센-기병-사망자",
    "title": "\n1  사례 연구\n",
    "section": "\n1.2 프로이센 기병 사망자",
    "text": "1.2 프로이센 기병 사망자\n프로이센 기병대에서 말 발길질로 사망한 병사의 수를 1875년부터 1894년까지, 14개의 기병 군단을 대상으로 수집한 데이터(Prussian Horse-Kick Data)가 포아송 분포에 잘 적합되는 것으로 유명하다.\n\n\n\n\n원본 데이터를 디지털로 복원한 후에 고정된 기간 말 발차기 사망자수를 빈도통계를 통해 표로 정리할 수 있다. 총 관측 횟수는 \\(14 \\times 20 = 280\\) (즉, 1875년부터 1894년까지 20년간 프로이센 군단 14개를 관측), 총 사망자 병사수가 196명으로부터 평균 사망병사수를 \\(\\lambda = \\frac{196}{280} = 0.7\\) 으로 계산할 수 있다. 다음으로 포아송분포에 적합시켜서 분포로부터 말 발차기 사망자수 빈도수를 계산한다.\n\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\n\nkick_raw &lt;- read_html(x = 'https://www.randomservices.org/random/data/HorseKicks.html') |&gt; \n  html_node(\"table\") |&gt; \n  html_table()\n\n# kick_raw |&gt; \n#   write_csv(\"data/horse_kick.csv\")\n\nkick_tbl &lt;- kick_raw |&gt; \n  pivot_longer(-Year, names_to = \"군단\", values_to = \"병사수\") |&gt; \n  count(사망횟수 = 병사수, name = \"빈도수\") |&gt; \n  mutate(사망자수 = 사망횟수 * 빈도수)  |&gt; \n  mutate(포아송적합 = map_dbl(사망횟수, dpois, lambda = 196/280) * 280) |&gt; \n  mutate(포아송적합 = round(포아송적합, digits = 0)) |&gt; \n  janitor::adorn_totals(c(\"row\"), name = \"합계\")\n\nkick_tbl |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  cols_align(\"center\") |&gt; \n  gt::tab_spanner(label = \"데이터\", \n                  columns = c(사망횟수, 빈도수))\n\n\n\n\n\n\n\n        데이터\n      \n      사망자수\n      포아송적합\n    \n\n사망횟수\n      빈도수\n    \n\n\n\n0\n144\n0\n139\n\n\n1\n91\n91\n97\n\n\n2\n32\n64\n34\n\n\n3\n11\n33\n8\n\n\n4\n2\n8\n1\n\n\n합계\n280\n196\n279\n\n\n\n\n\n\n시각적으로 실제 관측한 빈도수와 포아송 분포로부터 추정한 값을 함께 겹칠 경우 일부 차이가 있긴 하지만 대체로 포아송 분포에 잘 적합됨을 확인할 수 있다.\n\nkick_tbl |&gt; \n  filter(사망횟수 != \"합계\") |&gt; \n  ggplot() +\n    geom_segment(aes(x = 사망횟수, xend = 사망횟수, y = 0, yend=빈도수),\n                 linewidth= 2) +\n    geom_point(aes(사망횟수, 포아송적합), size=3, color=\"red\") +\n    labs(x = \"말 발차기로 사망한 병사 수\",\n         y = \"빈도수\",\n         title = \"말 발길질로 인한 프로이센 병사 사망\",\n         subtitle = \"실제 관측 데이터와 포아송분포 적합 기대값\")"
  },
  {
    "objectID": "clt.html",
    "href": "clt.html",
    "title": "\n2  중심극한정리 예시\n",
    "section": "",
    "text": "3 중심극한정리\n상자 안에 1에서 999까지 숫자가 표시된 999개의 상태가 균질한 공(\\(X\\))을 넣고 이를 특정한 모집단(population)이라고 가정하자. 이 모집단의 평균 \\(\\mu\\)은 500이다. 모집단의 분산 \\(\\mathrm{var}(X)\\)는 80,475이다.\n이 중 30개의 공을 50회에 걸쳐 반복 추출한다. 이 경우 표본평균의 분포는 \\(E(\\bar{X}_i)=\\mu(X)\\)이고 분산이 \\(\\mathrm{var}(\\bar{X_i})=\\frac{\\sigma^2}{n}\\)인 정규분포에 근사한다. 즉, \\(X \\sim \\mathcal{N}(500,~283.7^2)\\)이다."
  },
  {
    "objectID": "clt.html#이를-실험을-통해-살펴보자.",
    "href": "clt.html#이를-실험을-통해-살펴보자.",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n4.1 이를 실험을 통해 살펴보자.",
    "text": "4.1 이를 실험을 통해 살펴보자.\n999개의 공이 든 상자에서 30개의 공을 50회에 걸쳐 무작위 반복추출하고(30개의 공을 뽑은 뒤, 다시 그 공을 상자 안에 집어 놓고 상자를 처음과 같은 상태가 되도록 뒤흔들어서 다시 30개의 공을 뽑는 것을 50회 반복한다), 그 각각의 평균을 기록하면 다음과 같다.\n\n\n50회 반복추출의 평균값: 361.8, 587.8, 496.9, 535.6, 523.3, 634.7, 459.8, 488.7, 447.6, 560.4, 513.1, 440.7, 449.2, 431.0, 475.1, 458.3, 552.7, 465.0, 489.6, 484.3, 485.1, 527.1, 552.3, 549.4, 468.7, 500.8, 552.3, 464.9, 514.8, 445.4, 474.9, 488.3, 545.7, 591.5, 416.3, 521.8, 516.3, 498.5, 490.0, 615.1, 582.4, 458.4, 452.2, 513.4, 499.9, 467.7, 438.3, 521.1, 550.5, 622.5\n\n\n표본평균값의 분포를 히스토그램으로 표현하면 그림 4.1와 같다.\n\n\n\n\n그림 4.1: 표본평균의 히스토그램"
  },
  {
    "objectID": "clt.html#그림에서-보듯",
    "href": "clt.html#그림에서-보듯",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n4.2 그림에서 보듯",
    "text": "4.2 그림에서 보듯\n\\(\\bar{X_i}\\)는 500을 중심으로 좌우대칭적으로 분포하고 있다. 이들의 평균은 503.6으로 모평균 500과 근사하다. 이들 중 이론적으로 산출한 평균으로부터 약 2 표준편차만큼 떨어진 구간(\\(\\mu \\pm 2\\frac{\\sigma}{\\sqrt{n}}\\)) 안에 속하는 값, 즉 \\([396.4, 603.6]\\)의 범위 안에 있는 값의 개수를 세면 모두 46개이다.\n표본평균 분포의 약 95%를 포괄하고 있음을 알 수 있다."
  },
  {
    "objectID": "clt.html#r-markdown",
    "href": "clt.html#r-markdown",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n4.3 R Markdown",
    "text": "4.3 R Markdown\nRender 버튼을 누르면 문서가 생성된다. 여기에는 내용과 함께 내장된 R 코드 청크가 실행된다. R 코드는 다음과 같이 포함할 수 있다.\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00"
  },
  {
    "objectID": "clt.html#플로트-포함하기",
    "href": "clt.html#플로트-포함하기",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n4.4 플로트 포함하기",
    "text": "4.4 플로트 포함하기\n플로트도 포함할 수 있으니, 다음과 같다.\n\n\n\n\n그림 4.2: Pressure\n\n\n\necho = FALSE 파라미터를 주었기 때문에 이 플로트를 생성하는 R 코드가 인쇄되지 않는다. 그림 4.2을 보자."
  },
  {
    "objectID": "clt.html#재미있는-배열-문제",
    "href": "clt.html#재미있는-배열-문제",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n4.5 재미있는 배열 문제",
    "text": "4.5 재미있는 배열 문제\n\nN, C = 13,3\na=[ f\"{i+1}\" for i in range(N) ]\nfor i in range(1, C):\n    if len(a)%C == i: a.insert((len(a)//C+1)*(i+1)-1, \" \")\nprint(\"\\\\begin{tabular}{%s}\"%(\"l\"*C))\n\n\\begin{tabular}{lll}\n\nfor i in range(len(a)//C): print(\" & \".join(a[i::len(a)//C]), \" \\\\\\\\\")\n\n1 & 6 & 10  \\\\\n2 & 7 & 11  \\\\\n3 & 8 & 12  \\\\\n4 & 9 & 13  \\\\\n5 &   &    \\\\\n\nprint(\"\\\\end{tabular}\")\n\n\\end{tabular}\n\n\n이 문제는 흥미롭다. KTUG 게시판에 올라온 문제에 대하여 aud라는 분이 단 답변이다. 한편 로도 같은 일을 할 수 있음이 답글 중에 제시되어 있다."
  },
  {
    "objectID": "clt.html#개관",
    "href": "clt.html#개관",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n5.1 개관",
    "text": "5.1 개관\nQuarto의 특징 중의 하나는  문서의 소스를 그대로 집어넣어도 된다는 것이다. 이 장의 텍스트는 다른 곳에서 작성한  소스를 복사한 것이다."
  },
  {
    "objectID": "clt.html#표-그리기",
    "href": "clt.html#표-그리기",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n5.2 표 그리기",
    "text": "5.2 표 그리기\n다른 곳에서 책을 하나 조판하던 때에, tabular의 괘선에 색을 입혀달라는 요구가 있었다. 2020년경이었는데, 당시로서 이것을 구현하는 것은 거의 불가능해 보였으나 어찌어찌 tabular 자체 코드를 해킹해서 어렵사리 성공했더랬다. 그리고 잠시 지났더니 가 나왔다. 조금 더 일찍 나왔다면 그 고생을 하지 않았을 것 아닌가!\n이 패키지를 사용하면 그동안 골칫거리였던 tabular 관련 문제가 대부분 해결된다. 사용법이 조금 복잡해보일지 모르지만 익숙해지면 편하게 쓸 수 있다."
  },
  {
    "objectID": "clt.html#footnotes-in-boxed-environment",
    "href": "clt.html#footnotes-in-boxed-environment",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n5.3 footnotes in boxed environment",
    "text": "5.3 footnotes in boxed environment\n의 apparatus 중에 minipage footnote라는 것이 있다. 예를 들면 다음과 같은 것이다.\n이것은 매우 유용한 장치이기는 하나, 단행본을 출간하는 입장에서 가끔 모든 각주를 페이지 하단에 넣으라는 요구를 받을 때가 있다. 가장 간단한 해결책은 명령을 와 로 분해하는 것이다."
  },
  {
    "objectID": "clt.html#문헌목록",
    "href": "clt.html#문헌목록",
    "title": "\n2  중심극한정리 예시\n",
    "section": "\n5.4 문헌목록",
    "text": "5.4 문헌목록\n참고 문헌 인용과 목록 생성 실험을 합니다. 한국어 문헌과 구미어 문헌은 그 목록형성과 인용 방법이 다릅니다. 한국어 문헌의 예를 들면, [@kimuycwung_hankwukphan_2003]같고, 영어 문헌은 예를 들면, [@Allport:1992:OND]같습니다."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Allport, G., and P. Jarratt. 1992. “The Old and the New in\nDocument Processing.” Electronic Library 10 (1): 41–45.\n\n\n김의중, 이상익, 정도언, 신민섭, and 윤인영. 2003. “한국판\n기분상태척도(k-POMS)의 표준화와 신뢰도와 타당도\n평가.” 수면·정신생리 10 (1): 39–51."
  },
  {
    "objectID": "case_study.html#v2-rocket",
    "href": "case_study.html#v2-rocket",
    "title": "\n1  사례 연구\n",
    "section": "\n1.3 런던 투하 V2 로켓",
    "text": "1.3 런던 투하 V2 로켓\n2차 세계대전 중 독일은 신형 무기 V1, V2 로켓을 개발하여 전쟁 막판에 영국 런던을 폭격하여 반전을 노렸다. 독일 신형폭탄의 공격을 받은 영국에서는 독일에서 발사한 신형 폭탄이 정밀 타격한 것인지 아니면 무작위로 대충 발사를 한 것인지 데이터를 통해 검정을 하고자 한다. 1 2\n\n1.3.1 데이터\n가장 먼저 데이터를 준비한다. 데이터는 R.D. Clarke, “An Applicatin of the Poisson Distribution”을 참조한다.\n\n# 1. 기본 데이터 --------- \n\nbombs &lt;- c(\"0 개\",\"1 개\", \"2 개\",\"3 개\",\"4 개\",\"5 개 이상\")\nhit &lt;- c(229, 211, 93, 35, 7, 1)\nexpected &lt;- c(226.74, 211.39, 98.54, 30.62, 7.14, 1.57)\n\nbomb_df &lt;- tibble(bombs, hit, expected)\nbomb_df |&gt; \n  gt() |&gt; \n  gt_theme_538()\n\n\n\n\n\nbombs\n      hit\n      expected\n    \n\n\n0 개\n229\n226.74\n\n\n1 개\n211\n211.39\n\n\n2 개\n93\n98.54\n\n\n3 개\n35\n30.62\n\n\n4 개\n7\n7.14\n\n\n5 개 이상\n1\n1.57\n\n\n\n\n\n\n\n1.3.2 포아송 분포\n런던에 떨어진 폭탄이 포아송 분포, 즉 무작위로 떨어진 것이라고 가정하고 시각화를 한다. 포아송 분포는 모수가 \\(\\lambda\\) 하나만 추정하면 되기 때문에 데이터에서 모수를 추정한다.\n\\[P(\\text{ 해당 구간에서 발생한 k개 사건(k events in interval)}) = e^{-\\lambda}\\frac{\\lambda^k}{k!}\\]\n\n# 2. 포아송 분포 --------- \n\nhit &lt;- 537\narea &lt;- 576\n\n(lambda &lt;- hit/area)\n\n[1] 0.9322917\n\nggplot(bomb_df, aes(x=bombs,xend=bombs, y=0, yend=hit)) +\n  geom_segment(size=1.5) +\n  geom_point(aes(bombs, expected), size=2, color=\"red\") +\n  labs(x=\"런던 지역에 투하된 폭탄 수\", y=\"런던 지역 숫자\", title=\"영국 런던에 떨어진 V2 로켓 폭탄\",\n       subtitle=\"실제 투하 폭탄수와 포아송 분포로 추정한 폭탄수\")\n\n\n\n\n\n\n\n모수(\\(\\lambda\\))는 0.9322917로 추정된다. 이를 실제 데이터와 포아송 분포에서 나온 데이터와 겹쳐 시각화한다.\n예를 들어, 폭탄이 투하되지 않을 확률은 다음과 같다.\n\\[P(x=0) = e^{-0.9322917}\\frac{0.9322917^0}{0!} = 0.3936506\\]\n이를 R 코드로 표현하면 다음과 같다.\n\nlambda^0 *exp(-lambda) / factorial(0)\n\n[1] 0.3936506\n\n\n\n1.3.3 가설 검정\n시각적으로 살펴봤지만, 통계적 가설검정을 통해 다시 한번 런던에 투척된 폭탄이 포아송 분포를 따르는 것인지 검정해본다.\n\n귀무가설(\\(H_0\\)): 런던에 투하된 폭탄은 무작위로 떨어진 것이다. 즉, 폭탄이 떨어진 분포는 포아송 분포다.\n대립가설(\\(H_A\\)): 폭탄이 떨어진 것은 의도를 갖고 특정지역에 투하된 것이다.\n\n유의수준을 설정하고 검정통계량 \\(\\chi^2\\)을 정의해서 계산하면 귀무가설을 채택하게 된다.\n\n# 3. 통계적 검정 --------- \n\nchisq.test(bomb_df$hit, p=bomb_df$expected, rescale.p=TRUE, simulate.p.value=TRUE)\n\n\n    Chi-squared test for given probabilities with simulated p-value (based\n    on 2000 replicates)\n\ndata:  bomb_df$hit\nX-squared = 1.1709, df = NA, p-value = 0.9505\n\n# 4. 최종 데이터 ---------\n\nbomb_df$r_expected &lt;- 573 * c( dpois(0:4, lambda), 1 - sum(dpois(0:4, lambda)))\n\nbomb_df |&gt; \n  gt() |&gt; \n    gt_theme_538()\n\n\n\n\n\nbombs\n      hit\n      expected\n      r_expected\n    \n\n\n0 개\n229\n226.74\n225.561771\n\n\n1 개\n211\n211.39\n210.289359\n\n\n2 개\n93\n98.54\n98.025509\n\n\n3 개\n35\n30.62\n30.462788\n\n\n4 개\n7\n7.14\n7.100051\n\n\n5 개 이상\n1\n1.57\n1.560522\n\n\n\n\n\n\n\n1.3.4 지리정보를 통한 이해\n공간정보를 활용한 사례로 이를 공간정보에 시각화하면 다음과 같다. 물론 정확한 데이터가 없어 런던 남부에 떨어진 폭탄이 포아송 분포를 따른다고 가정하고 576개 구획으로 나눈 것에 임의로 폭탄이 떨어진 것을 시각화하면 다음과 같다.\n\n# 5. 지리정보 ---------\nlibrary(spatstat)\npar(mar = rep(0, 4))\n\n# 24*24 = 576\nsouth_london &lt;- rpoispp(lambda, win = owin(c(0, 24), c(0, 24)))\nplot(south_london, main=\"\", cex=0.5)\nabline(h = 0:24, v = 0:24, col = \"lightgray\", lty = 3)\n\n\n\n\n\n\n\n포아송 분포를 가정하고 통계적 검정도 물론 가능하다. spatstat 팩키지의 함수를 활용하여 통계적 검정을 해도 동일한 결론에 도달하게 된다.\n\nbomb_test &lt;- quadrat.test(south_london, nx = 24, ny = 24, method=\"Chisq\")\nbomb_test\n\n\n    Chi-squared test of CSR using quadrat counts\n\ndata:  south_london\nX2 = 591.53, df = 575, p-value = 0.6154\nalternative hypothesis: two.sided\n\nQuadrats: 24 by 24 grid of tiles\nTessellation is marked"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GPT 통계",
    "section": "",
    "text": "서문"
  },
  {
    "objectID": "cs_prussia.html#교통사고",
    "href": "cs_prussia.html#교통사고",
    "title": "\n1  프로이센 기병\n",
    "section": "\n1.1 교통사고",
    "text": "1.1 교통사고\n포아송은 미래에 발생할 경우의 수를 예측하기 위해서 포아송 분포를 창안했다. 좀더 구체적으로 고정된 시간 범위에 발생할 사건을 예측하기 위해서다.\n한가지 사례로 한국 R 사용자회 페이스북 그룹에 매주 페이스북 게시글을 올리는데 좋아요를 누르는 평균 회원수가 10명이다. 새로운 페이스북 게시글을 올렸는데 좋아요를 누른 회원이 15명이 될 확률은 얼마나 될까?\n이와 같이 다음주(미래) 좋아요를 누른(사건) 회원수가 15명(5, 10, 20, …)이 될 확률을 알고 싶은 것이다.\n\n1.1.1 포아송 분포 수렴\n다음 조건을 만족할 때 이항분포가 포아송 분포로 수렴되어 근사할 수 있다.\n\n시행 횟수 \\(n\\) 이 매우 크다.\n성공 확률 \\(p\\) 가 매우 작다.\n따라서, \\(\\lambda = n \\times p\\) 가 일정하다.\n\n이항분포 \\(Bin(n, p)\\)는 포아송 분포 \\(Poi(\\lambda)\\)에 근사한다.\n전체 제품 중에서 고장확률이 매우 작은 전자제품을 사례로 들어보자. 예를 들어, 어떤 공장에서 10,000개의 제품을 제조했을 때, 각 제품이 고장날 확률이 0.0001이라고 가정하면 이항분포로 전체 제품 중 1개 고장확률을 계산할 수 있지만, 제품 수가 매우 크고 고장 확률이 매우 작기 때문에 \\(\\lambda = np = 10,000 \\times 0.0001 = 1\\)를 갖는 포아송 분포를 사용하여 근사할 수 있다.\n\n1.1.2 월간 교통사고\n한 도시의 주요 교차로에서, 지난 1년 동안의 데이터를 기반으로 하루 평균 3건의 교통 사고가 발생했다고 가정하자. 이 정보를 바탕으로 특정 날에 교통 사고가 발생할 횟수의 확률 분포를 예측해보자.\n포아송 분포의 평균은 \\(\\lambda\\)이며, 이 경우에는 하루 평균 교통 사고 횟수인 3으로 설정할 수 있다.\n이제 포아송 분포의 확률 질량 함수를 사용하여, 특정 날에 교통 사고가 k번 발생할 확률을 계산할 수 있다.\n\\[\nP(X=k) = \\frac{\\lambda^k e^{-\\lambda}}{k!}\n\\]\n여기서, \\(e\\)는 자연상수입니다.\n예를 들어, 특정 날에 교통 사고가 정확히 2번 발생할 확률을 계산하려면:\n\\[P(X=2) = \\frac{3^2 e^{-3}}{2!} = 0.224\\]\n한걸음 더 들어가 실세 교통사고분석시스템(TAAS) 웹사이트에서 2022년 월별 교통사고 데이터를 얻을 수 있다.\n\nlibrary(tidyverse)\nlibrary(readxl)\n\naccident_raw &lt;- read_excel(\"data/2022년_월별_교통사고.xlsx\", sheet = \"2022년도 월별 교통사고\", skip = 2)\n\naccident_tbl &lt;- accident_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(월, 사고건수 = 사고건수_건) \n\naccident_tbl\n\n# A tibble: 12 × 2\n   월    사고건수\n   &lt;chr&gt;    &lt;dbl&gt;\n 1 01월     15894\n 2 02월     12362\n 3 03월     13620\n 4 04월     16472\n 5 05월     18065\n 6 06월     16481\n 7 07월     17115\n 8 08월     16496\n 9 09월     17216\n10 10월     18508\n11 11월     17578\n12 12월     17029\n\n\n월별 평균 사고건수를 mean() 함수를 사용해서 계산할 수 있다. 교통량은 상당히 크고, 교통사고 확률은 매우 낮기 때문에 포아송 분포로 근사를 하는 것이 가능하다. 교통사고 건수가 많기 때문에 단위를 천대 기준으로 조정하여 포아송 분포 모수 \\(\\lambda\\)를 계산한다.\n\naccident_mean &lt;- mean(accident_tbl$사고건수) / 1000\n\naccident_mean\n\n[1] 16.403\n\n\n월별로 2만대 이상 교통사고가 발생될 경우 교통사고 환자수가 급증하여 병원에 큰 부하가 걸려 사회적 문제가 된다는 가정하에 월별로 2만대 이상 교통사고가 발생할 확률을 계산해보자.\n\\(P(X \\geq 20)\\) 확률값은 전체 경우의 수에서 0 ~ 1.9 만대 사고건수가 발생할 확률을 빼주면 계산이 가능하고 다음과 같이 수식으로 표현할 수 있다.\n\\[\nP(X \\geq 20) = 1 - (P(X=0) + P(X=1) + \\ldots + P(X=19))\n\\]\n이를 R 코드로 작성하면 다음과 같이 함수형 프로그래밍 purrr 패키지 map_dbl() 함수와 포아송 함수에 \\(\\lambda = 16.403\\)를 넣어 계산이 가능하거나 내장 함수 ppois()로 직접 동일한 계산작업을 수행할 수 있다.\n\nlibrary(tidyverse)\n\naccident_prob &lt;- 1 - sum(map_dbl(0:19, ~ (accident_mean^.x * exp(-accident_mean)) / factorial(.x)))\n# 1 - ppois(19, lambda = 16.403)\n\naccident_prob\n\n[1] 0.2169535"
  },
  {
    "objectID": "cs_prussia.html#프로이센-기병-사망자",
    "href": "cs_prussia.html#프로이센-기병-사망자",
    "title": "\n1  프로이센 기병\n",
    "section": "\n1.2 프로이센 기병 사망자",
    "text": "1.2 프로이센 기병 사망자\n프로이센 기병대에서 말 발길질로 사망한 병사의 수를 1875년부터 1894년까지, 14개의 기병 군단을 대상으로 수집한 데이터(Prussian Horse-Kick Data)가 포아송 분포에 잘 적합되는 것으로 유명하다.\n\n\n\n\n원본 데이터를 디지털로 복원한 후에 고정된 기간 말 발차기 사망자수를 빈도통계를 통해 표로 정리할 수 있다. 총 관측 횟수는 \\(14 \\times 20 = 280\\) (즉, 1875년부터 1894년까지 20년간 프로이센 군단 14개를 관측), 총 사망자 병사수가 196명으로부터 평균 사망병사수를 \\(\\lambda = \\frac{196}{280} = 0.7\\) 으로 계산할 수 있다. 다음으로 포아송분포에 적합시켜서 분포로부터 말 발차기 사망자수 빈도수를 계산한다.\n\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\n\nkick_raw &lt;- read_html(x = 'https://www.randomservices.org/random/data/HorseKicks.html') |&gt; \n  html_node(\"table\") |&gt; \n  html_table()\n\n# kick_raw |&gt; \n#   write_csv(\"data/horse_kick.csv\")\n\nkick_tbl &lt;- kick_raw |&gt; \n  pivot_longer(-Year, names_to = \"군단\", values_to = \"병사수\") |&gt; \n  count(사망횟수 = 병사수, name = \"빈도수\") |&gt; \n  mutate(사망자수 = 사망횟수 * 빈도수)  |&gt; \n  mutate(포아송적합 = map_dbl(사망횟수, dpois, lambda = 196/280) * 280) |&gt; \n  mutate(포아송적합 = round(포아송적합, digits = 0)) |&gt; \n  janitor::adorn_totals(c(\"row\"), name = \"합계\")\n\nkick_tbl |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  cols_align(\"center\") |&gt; \n  gt::tab_spanner(label = \"데이터\", \n                  columns = c(사망횟수, 빈도수))\n\n\n\n\n\n\n\n        데이터\n      \n      사망자수\n      포아송적합\n    \n\n사망횟수\n      빈도수\n    \n\n\n\n0\n144\n0\n139\n\n\n1\n91\n91\n97\n\n\n2\n32\n64\n34\n\n\n3\n11\n33\n8\n\n\n4\n2\n8\n1\n\n\n합계\n280\n196\n279\n\n\n\n\n\n\n시각적으로 실제 관측한 빈도수와 포아송 분포로부터 추정한 값을 함께 겹칠 경우 일부 차이가 있긴 하지만 대체로 포아송 분포에 잘 적합됨을 확인할 수 있다.\n\nkick_tbl |&gt; \n  filter(사망횟수 != \"합계\") |&gt; \n  ggplot() +\n    geom_segment(aes(x = 사망횟수, xend = 사망횟수, y = 0, yend=빈도수),\n                 linewidth= 2) +\n    geom_point(aes(사망횟수, 포아송적합), size=3, color=\"red\") +\n    labs(x = \"말 발차기로 사망한 병사 수\",\n         y = \"빈도수\",\n         title = \"말 발길질로 인한 프로이센 병사 사망\",\n         subtitle = \"실제 관측 데이터와 포아송분포 적합 기대값\")"
  },
  {
    "objectID": "cs_prussia.html#v2-rocket",
    "href": "cs_prussia.html#v2-rocket",
    "title": "\n1  프로이센 기병\n",
    "section": "\n1.3 런던 투하 V2 로켓",
    "text": "1.3 런던 투하 V2 로켓\n2차 세계대전 중 독일은 신형 무기 V1, V2 로켓을 개발하여 전쟁 막판에 영국 런던을 폭격하여 반전을 노렸다. 독일 신형폭탄의 공격을 받은 영국에서는 독일에서 발사한 신형 폭탄이 정밀 타격한 것인지 아니면 무작위로 대충 발사를 한 것인지 데이터를 통해 검정을 하고자 한다. 1 2\n\n1.3.1 데이터\n가장 먼저 데이터를 준비한다. 데이터는 R.D. Clarke, “An Applicatin of the Poisson Distribution”을 참조한다.\n\n# 1. 기본 데이터 --------- \n\nbombs &lt;- c(\"0 개\",\"1 개\", \"2 개\",\"3 개\",\"4 개\",\"5 개 이상\")\nhit &lt;- c(229, 211, 93, 35, 7, 1)\nexpected &lt;- c(226.74, 211.39, 98.54, 30.62, 7.14, 1.57)\n\nbomb_df &lt;- tibble(bombs, hit, expected)\nbomb_df |&gt; \n  gt() |&gt; \n  gt_theme_538()\n\n\n\n\n\nbombs\n      hit\n      expected\n    \n\n\n0 개\n229\n226.74\n\n\n1 개\n211\n211.39\n\n\n2 개\n93\n98.54\n\n\n3 개\n35\n30.62\n\n\n4 개\n7\n7.14\n\n\n5 개 이상\n1\n1.57\n\n\n\n\n\n\n\n1.3.2 포아송 분포\n런던에 떨어진 폭탄이 포아송 분포, 즉 무작위로 떨어진 것이라고 가정하고 시각화를 한다. 포아송 분포는 모수가 \\(\\lambda\\) 하나만 추정하면 되기 때문에 데이터에서 모수를 추정한다.\n\\[P(\\text{ 해당 구간에서 발생한 k개 사건(k events in interval)}) = e^{-\\lambda}\\frac{\\lambda^k}{k!}\\]\n\n# 2. 포아송 분포 --------- \n\nhit &lt;- 537\narea &lt;- 576\n\n(lambda &lt;- hit/area)\n\n[1] 0.9322917\n\nggplot(bomb_df, aes(x=bombs,xend=bombs, y=0, yend=hit)) +\n  geom_segment(size=1.5) +\n  geom_point(aes(bombs, expected), size=2, color=\"red\") +\n  labs(x=\"런던 지역에 투하된 폭탄 수\", y=\"런던 지역 숫자\", title=\"영국 런던에 떨어진 V2 로켓 폭탄\",\n       subtitle=\"실제 투하 폭탄수와 포아송 분포로 추정한 폭탄수\")\n\n\n\n\n\n\n\n모수(\\(\\lambda\\))는 0.9322917로 추정된다. 이를 실제 데이터와 포아송 분포에서 나온 데이터와 겹쳐 시각화한다.\n예를 들어, 폭탄이 투하되지 않을 확률은 다음과 같다.\n\\[P(x=0) = e^{-0.9322917}\\frac{0.9322917^0}{0!} = 0.3936506\\]\n이를 R 코드로 표현하면 다음과 같다.\n\nlambda^0 *exp(-lambda) / factorial(0)\n\n[1] 0.3936506\n\n\n\n1.3.3 가설 검정\n시각적으로 살펴봤지만, 통계적 가설검정을 통해 다시 한번 런던에 투척된 폭탄이 포아송 분포를 따르는 것인지 검정해본다.\n\n귀무가설(\\(H_0\\)): 런던에 투하된 폭탄은 무작위로 떨어진 것이다. 즉, 폭탄이 떨어진 분포는 포아송 분포다.\n대립가설(\\(H_A\\)): 폭탄이 떨어진 것은 의도를 갖고 특정지역에 투하된 것이다.\n\n유의수준을 설정하고 검정통계량 \\(\\chi^2\\)을 정의해서 계산하면 귀무가설을 채택하게 된다.\n\n# 3. 통계적 검정 --------- \n\nchisq.test(bomb_df$hit, p=bomb_df$expected, rescale.p=TRUE, simulate.p.value=TRUE)\n\n\n    Chi-squared test for given probabilities with simulated p-value (based\n    on 2000 replicates)\n\ndata:  bomb_df$hit\nX-squared = 1.1709, df = NA, p-value = 0.9475\n\n# 4. 최종 데이터 ---------\n\nbomb_df$r_expected &lt;- 573 * c( dpois(0:4, lambda), 1 - sum(dpois(0:4, lambda)))\n\nbomb_df |&gt; \n  gt() |&gt; \n    gt_theme_538()\n\n\n\n\n\nbombs\n      hit\n      expected\n      r_expected\n    \n\n\n0 개\n229\n226.74\n225.561771\n\n\n1 개\n211\n211.39\n210.289359\n\n\n2 개\n93\n98.54\n98.025509\n\n\n3 개\n35\n30.62\n30.462788\n\n\n4 개\n7\n7.14\n7.100051\n\n\n5 개 이상\n1\n1.57\n1.560522\n\n\n\n\n\n\n\n1.3.4 지리정보를 통한 이해\n공간정보를 활용한 사례로 이를 공간정보에 시각화하면 다음과 같다. 물론 정확한 데이터가 없어 런던 남부에 떨어진 폭탄이 포아송 분포를 따른다고 가정하고 576개 구획으로 나눈 것에 임의로 폭탄이 떨어진 것을 시각화하면 다음과 같다.\n\n# 5. 지리정보 ---------\nlibrary(spatstat)\npar(mar = rep(0, 4))\n\n# 24*24 = 576\nsouth_london &lt;- rpoispp(lambda, win = owin(c(0, 24), c(0, 24)))\nplot(south_london, main=\"\", cex=0.5)\nabline(h = 0:24, v = 0:24, col = \"lightgray\", lty = 3)\n\n\n\n\n\n\n\n포아송 분포를 가정하고 통계적 검정도 물론 가능하다. spatstat 팩키지의 함수를 활용하여 통계적 검정을 해도 동일한 결론에 도달하게 된다.\n\nbomb_test &lt;- quadrat.test(south_london, nx = 24, ny = 24, method=\"Chisq\")\nbomb_test\n\n\n    Chi-squared test of CSR using quadrat counts\n\ndata:  south_london\nX2 = 563.78, df = 575, p-value = 0.7541\nalternative hypothesis: two.sided\n\nQuadrats: 24 by 24 grid of tiles\nTessellation is marked"
  }
]