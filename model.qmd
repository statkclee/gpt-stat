---
output: html_document
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: sentence
---

# 모형 관리

## 모형 카드

모형 카드("Model Card")는 기계 학습 모델의 성능, 사용 사례, 제한 사항 및 이상적인 운영 조건 등의 중요한 세부 사항을 기술하는 문서를 지칭한다. Model Card의 주요 목적은 기계학습 모형 사용자에게 모형 특성과 제한 사항을 명확하게 알려주어, 모형이 적절하게 사용할 수 있도록 돕는 것이다.

모형 카드(Model Card)는 기계 학습 모델의 다양한 측면을 설명하기 위해 다음 정보를 포함하고 있다.

- 모델 정보(Model Information)
  - 모델 이름
  - 버전
  - 사용 사례
  - 모델 아키텍처
  - 학습 알고리즘
  - 라이센스 정보 등

- 데이터셋 정보(Dataset Information)
  - 학습 데이터셋 설명
  - 검증 데이터셋 설명
  - 테스트 데이터셋 설명
  - 데이터 수집 방법
  - 데이터 처리 방법 등

- 모델 성능(Metrics)
  - 전체 성능 지표
  - 하위그룹별 성능 지표
  - 가능한 경우, 편향(bias) 분석 결과

- 편향 및 공정성 평가(Bias & Fairness Evaluation)
  - 고려된 편향 요소
  - 평가 방법
  - 결과 및 해석

- 사용 상황 및 제한 사항(Use-case & Limitations)
  - 추천되는 사용 사례
  - 추천되지 않는 사용 사례
  - 알려진 제한 사항
  
- 모델 관리 및 업데이트(Model Management)
  - 업데이트 빈도
  - 업데이트 메커니즘
  - 모델의 사용 기간
 
- 추가 정보(Additional Information)
  - 연구 논문 또는 참조 자료
  - 문의처
  - 관련 웹사이트 링크 등

## 펭귄 성별예측

파머펭귄 데이터셋에서 결측값을 제거하고 기계학습모형을 훈련, 시험 데이터로 
나누고 모형성능을 평가한 후 펭귄 암수성별 예측 모형을 배포한다.
`Code Interpreter`를 사용해서 코드를 작성한다.

```{python}
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Load the dataset
penguins = pd.read_csv('data/penguins.csv')

# Preprocessing
penguins['bill_length_mm'].fillna(penguins['bill_length_mm'].median(), inplace=True)
penguins['bill_depth_mm'].fillna(penguins['bill_depth_mm'].median(), inplace=True)
penguins['flipper_length_mm'].fillna(penguins['flipper_length_mm'].median(), inplace=True)
penguins['body_mass_g'].fillna(penguins['body_mass_g'].median(), inplace=True)
penguins = penguins.dropna(subset=['sex'])

# Splitting the data into training and testing sets
X = penguins.drop(columns=['rowid', 'sex'])
y = penguins['sex']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# One-hot encoding categorical variables
encoder = OneHotEncoder(drop='first')
encoded_train = encoder.fit_transform(X_train[['species', 'island']])
encoded_test = encoder.transform(X_test[['species', 'island']])
X_train_encoded = pd.concat([X_train.drop(columns=['species', 'island']), pd.DataFrame(encoded_train.toarray(), index=X_train.index)], axis=1)
X_test_encoded = pd.concat([X_test.drop(columns=['species', 'island']), pd.DataFrame(encoded_test.toarray(), index=X_test.index)], axis=1)

# 데이터 프레임의 모든 열 이름을 문자열로 변환
X_train_encoded.columns = X_train_encoded.columns.astype(str)
X_test_encoded.columns = X_test_encoded.columns.astype(str)


# Training a logistic regression model
clf = LogisticRegression(max_iter=1000)
clf.fit(X_train_encoded, y_train)

# Predictions
y_pred = clf.predict(X_test_encoded)

# Model evaluation
accuracy = accuracy_score(y_test, y_pred)
classification_rep = classification_report(y_test, y_pred)
print("Accuracy:", accuracy)
print("Classification Report:", classification_rep)
```

## 성별예측 모형카드

펭귄 암수성별 예측 모형에 대한 모델 카드를 다음과 같이 작성할 수 있다.
모형 카드는 펭귄 성별 예측 모델의 기본 정보와 성능, 사용 상황 및 제한 사항 등을 포함하고 있고, 필요한 경우 추가적인 정보나 세부 사항을 포함시킬 수 있다.


---

### Model Card: 펭귄 성별 예측 모델

- **모델 정보(Model Information)**
  - **모델 이름**: 펭귄 성별 예측 모델
  - **버전**: 1.0
  - **사용 사례**: 펭귄의 특성(부리 크기, 날개 길이, 몸무게 등)을 기반으로 성별을 예측
  - **모델 아키텍처**: 로지스틱 회귀
  - **학습 알고리즘**: 로지스틱 회귀 학습 알고리즘
  - **라이센스 정보**: Open Source
  
- **데이터셋 정보(Dataset Information)**
  - **데이터셋 출처**: 제공되지 않음
  - **특성**: species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year
  - **대상 변수**: sex (male, female)
  
- **모델 성능(Metrics)**
  - **정확도(Accuracy)**: 89.5%
  - **여성 펭귄 정밀도(Precision for Female)**: 94%
  - **여성 펭귄 재현율(Recall for Female)**: 86%
  - **남성 펭귄 정밀도(Precision for Male)**: 85%
  - **남성 펭귄 재현율(Recall for Male)**: 94%
  
- **편향 및 공정성 평가(Bias & Fairness Evaluation)**
  - 해당 정보가 제공되지 않았으므로, 해당 항목은 생략합니다.
  
- **사용 상황 및 제한 사항(Use-case & Limitations)**
  - **추천되는 사용 사례**: 연구 목적, 펭귄의 성별을 빠르게 예측
  - **추천되지 않는 사용 사례**: 실제 환경에서의 중요한 의사 결정
  - **알려진 제한 사항**: 제공된 데이터셋에만 최적화됨
  
- **모델 관리 및 업데이트(Model Management)**
  - **업데이트 빈도**: 없음 (첫 버전)
  - **업데이트 메커니즘**: 모델을 다시 훈련하여 업데이트
  - **모델의 사용 기간**: 데이터가 변하지 않는 한 계속 사용 가능
  
- **추가 정보(Additional Information)**
  - **연구 논문 또는 참조 자료**: https://arxiv.org/abs/1810.03993
  - **문의처**: admin@r2bit.com
  - **관련 웹사이트 링크**: https://r2bit.com/







